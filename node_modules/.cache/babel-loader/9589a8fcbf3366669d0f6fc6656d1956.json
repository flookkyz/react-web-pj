{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = firebase.initializeApp({\n  apiKey: \"AIzaSyDfLVowRODd_-LtNrrEPEofm-2Gb2kf_F0\",\n  authDomain: \"pj-time.firebaseapp.com\",\n  projectId: \"pj-time\",\n  storageBucket: \"pj-time.appspot.com\",\n  messagingSenderId: \"548881226627\",\n  appId: \"1:548881226627:web:a4e0e327cc4a3793eaf4b6\",\n  measurementId: \"G-5K375YQ0DJ\"\n});\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createStuDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`students/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email\n    } = user;\n    const {\n      stuname,\n      stunum,\n      croom,\n      nroom\n    } = additionalData;\n\n    try {\n      await userRef.set({\n        stuname,\n        email,\n        stunum,\n        croom,\n        nroom\n      }).then(await firestore.collection('teachers').doc(`jRAEgSpzjweImMCsGGtGf6n6LLs1`).collection('student').doc('${user.uid}').set({\n        stuname,\n        email,\n        stunum,\n        croom,\n        nroom\n      }));\n    } catch (error) {\n      console.log(\"Error in creating student\", error);\n    }\n  }\n};\nexport const createTeaDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.collection('teachers').doc(`${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email\n    } = user;\n    const {\n      teaname,\n      teanum,\n      croom,\n      nroom\n    } = additionalData;\n\n    try {\n      await userRef.set({\n        teaname,\n        email,\n        teanum,\n        croom,\n        nroom\n      });\n    } catch (error) {\n      console.log(\"Error in creating teacher\", error);\n    }\n  }\n};\nexport default firebaseConfig;","map":{"version":3,"sources":["/Users/chakkarineammi/Desktop/react-web-pj/src/config.js"],"names":["firebase","firebaseConfig","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","createStuDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","email","stuname","stunum","croom","nroom","set","then","collection","error","console","log","createTeaDocument","teaname","teanum"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAGD,QAAQ,CAACE,aAAT,CAAuB;AAC5CC,EAAAA,MAAM,EAAE,yCADoC;AAE5CC,EAAAA,UAAU,EAAE,yBAFgC;AAG5CC,EAAAA,SAAS,EAAE,SAHiC;AAI5CC,EAAAA,aAAa,EAAE,qBAJ6B;AAK5CC,EAAAA,iBAAiB,EAAE,cALyB;AAM5CC,EAAAA,KAAK,EAAE,2CANqC;AAO5CC,EAAAA,aAAa,EAAE;AAP6B,CAAvB,CAAvB;AAUA,OAAO,MAAMC,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAC/D,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,YAAWH,IAAI,CAACI,GAAI,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAYR,IAAlB;AACA,UAAM;AAAES,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,QAAoCX,cAA1C;;AAEA,QAAI;AACF,YAAMC,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,OADgB;AAEhBD,QAAAA,KAFgB;AAGhBE,QAAAA,MAHgB;AAIhBC,QAAAA,KAJgB;AAKhBC,QAAAA;AALgB,OAAZ,EAMHE,IANG,CAOJ,MAAMhB,SAAS,CAACiB,UAAV,CAAqB,UAArB,EAAiCZ,GAAjC,CAAsC,8BAAtC,EAAqEY,UAArE,CAAgF,SAAhF,EAA2FZ,GAA3F,CAA+F,aAA/F,EAA8GU,GAA9G,CAAkH;AACtHJ,QAAAA,OADsH;AAEtHD,QAAAA,KAFsH;AAGtHE,QAAAA,MAHsH;AAItHC,QAAAA,KAJsH;AAKtHC,QAAAA;AALsH,OAAlH,CAPF,CAAN;AAeD,KAhBD,CAgBE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACD;AACF;AACF,CA/BM;AAiCP,OAAO,MAAMG,iBAAiB,GAAG,OAAOnB,IAAP,EAAaC,cAAb,KAAgC;AAC/D,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGJ,SAAS,CAACiB,UAAV,CAAqB,UAArB,EAAiCZ,GAAjC,CAAsC,GAAEH,IAAI,CAACI,GAAI,EAAjD,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAYR,IAAlB;AACA,UAAM;AAAEoB,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBV,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,QAAoCX,cAA1C;;AAEA,QAAI;AACF,YAAMC,OAAO,CAACW,GAAR,CAAY;AAChBO,QAAAA,OADgB;AAEhBZ,QAAAA,KAFgB;AAGhBa,QAAAA,MAHgB;AAIhBV,QAAAA,KAJgB;AAKhBC,QAAAA;AALgB,OAAZ,CAAN;AAOD,KARD,CAQE,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACD;AACF;AACF,CAvBM;AAwBP,eAAe5B,cAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = firebase.initializeApp({\n  apiKey: \"AIzaSyDfLVowRODd_-LtNrrEPEofm-2Gb2kf_F0\",\n  authDomain: \"pj-time.firebaseapp.com\",\n  projectId: \"pj-time\",\n  storageBucket: \"pj-time.appspot.com\",\n  messagingSenderId: \"548881226627\",\n  appId: \"1:548881226627:web:a4e0e327cc4a3793eaf4b6\",\n  measurementId: \"G-5K375YQ0DJ\",\n});\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createStuDocument = async (user, additionalData) => {\n  if (!user) return;\n\n  const userRef = firestore.doc(`students/${user.uid}`);\n\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { email } = user;\n    const { stuname, stunum, croom, nroom } = additionalData;\n\n    try {\n      await userRef.set({\n        stuname,\n        email,\n        stunum,\n        croom,\n        nroom,\n      }).then(\n        await firestore.collection('teachers').doc(`jRAEgSpzjweImMCsGGtGf6n6LLs1`).collection('student').doc('${user.uid}').set({\n          stuname,\n          email,\n          stunum,\n          croom,\n          nroom,\n        })\n      );\n    } catch (error) {\n      console.log(\"Error in creating student\", error);\n    }\n  }\n};\n\nexport const createTeaDocument = async (user, additionalData) => {\n  if (!user) return;\n\n  const userRef = firestore.collection('teachers').doc(`${user.uid}`);\n\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { email } = user;\n    const { teaname, teanum, croom, nroom } = additionalData;\n\n    try {\n      await userRef.set({\n        teaname,\n        email,\n        teanum,\n        croom,\n        nroom,\n      });\n    } catch (error) {\n      console.log(\"Error in creating teacher\", error);\n    }\n  }\n};\nexport default firebaseConfig;\n"]},"metadata":{},"sourceType":"module"}